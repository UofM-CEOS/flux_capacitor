## Flux Analysis Configuration
## ---------------------------
#
# This is the configuration file that defines critical variables needed to
# carry out flux analyses.  It has a few sections starting defined by the
# square brackets and ending where another section starts.  The right-hand
# value for each key is a simple comma-separated list of strings; quotes,
# brackets, or anything around each value is not required, except where
# noted.  A comment starts with "#" and ends at the end of the line.  Lines
# starting with a semicolon show the default value for a variable.
#
# Please review all these variables thoroughly to ensure that the analyses
# are performed as intended.  Use ${SECTION:VARIABLE} to refer to any
# variable within the configuration.
#
# Read the comments for each variable to understand how set it.
# -------------------------------------------------------------------------

[EC Inputs]

# Path to where the input files are found.  Default: current directory.
; input_directory =

# This is a simple shell-style pattern to find input files in
# input_directory.
; file_pattern = *[0-9].csv

# Names for all the columns in input files.  Valid names are:
# time_20min, time_study, longitude, latitude,
# speed_over_ground, course_over_ground, heading, pitch, roll,
# heave, atmospheric_pressure, air_temperature, relative_humidity,
# surface_temperature, wind_speed, wind_direction, true_wind_speed,
# true_wind_direction, PAR, K_down, temperature_thermopile,
# temperature_case, temperature_dome, LW_down, UV_sensor_temperature,
# UV_a, UV_b, UV_broad, acceleration_x, acceleration_y, acceleration_z,
# rate_x, rate_y, rate_z, wind_speed_u, wind_speed_v, wind_speed_w,
# air_temperature_sonic, sound_speed, anemometer_status,
# op_CO2_fraction, op_CO2_density, op_CO2_absorptance,
# op_H2O_fraction, op_H2O_density, op_H2O_absorptance, op_pressure,
# op_temperature, op_temperature_base, op_temperature_spar,
# op_temperature_bulb, op_cooler_voltage, op_bandwidth,
# op_delay_interval, op_bad_chopper_wheel_temperature_flag,
# op_bad_detector_temperature_flag, op_bad_optical_wheel_rate_flag,
# op_bad_sync_flag, op_CO2_signal_strength, op_AGC, op_analyzer_status,
# cp_analyzer_status, cp_CO2_fraction, cp_CO2_density,
# cp_CO2_dry_fraction, cp_CO2_absorptance, cp_H2O_fraction,
# cp_H2O_density, cp_H2O_dry_fraction, cp_H2O_absorptance, cp_pressure,
# cp_temperature, cp_temperature_in, cp_temperature_out,
# cp_temperature_block, cp_temperature_cell, cp_CO2_signal_strength,
# cp_H2O_signal_strength
; colnames = time_20min, time_study, longitude, latitude,
; 	       speed_over_ground, course_over_ground, heading, pitch, roll,
; 	       heave, atmospheric_pressure, air_temperature, relative_humidity,
; 	       surface_temperature, wind_speed, wind_direction, true_wind_speed,
; 	       true_wind_direction, PAR, K_down, temperature_thermopile,
; 	       temperature_case, temperature_dome, LW_down, UV_sensor_temperature,
; 	       UV_b, UV_broad, acceleration_x, acceleration_y, acceleration_z,
; 	       rate_x, rate_y, rate_z, wind_speed_u, wind_speed_v, wind_speed_w,
; 	       air_temperature_sonic, sound_speed, anemometer_status,
; 	       op_CO2_fraction, op_CO2_density, op_CO2_absorptance,
; 	       op_H2O_fraction, op_H2O_density, op_H2O_absorptance, op_pressure,
; 	       op_temperature, op_temperature_base, op_temperature_spar,
; 	       op_temperature_bulb, op_cooler_voltage, op_bandwidth,
; 	       op_delay_interval, op_bad_chopper_wheel_temperature_flag,
; 	       op_bad_detector_temperature_flag, op_bad_optical_wheel_rate_flag,
; 	       op_bad_sync_flag, op_CO2_signal_strength, op_analyzer_status,
; 	       cp_analyzer_status, cp_CO2_fraction, cp_CO2_density,
; 	       cp_CO2_dry_fraction, cp_CO2_absorptance, cp_H2O_fraction,
; 	       cp_H2O_density, cp_H2O_dry_fraction, cp_H2O_absorptance,
; 	       cp_pressure, cp_temperature, cp_temperature_in, cp_temperature_out,
; 	       cp_temperature_block, cp_temperature_cell,
; 	       cp_CO2_signal_strength, cp_H2O_signal_strength

# Sampling frequency (Hz).
; sample_frequency = 10.0

[EC Outputs]

# Path to output calculation summary file.
; summary_file = fluxes.csv

[EC Despiking]

# The width of the sliding window for the Vickers-Mahrt (1997) procedure.
; despike_win_width = 3000
# The step size between windows for the Vickers-Mahrt (1997) procedure.
; despike_step = 1500
# The number of repetitions to perform Vickers-Mahrt (1997) procedure.
; despike_nreps = 20

[EC Motion Correction]

# Tilt window width (minutes)
; tilt_window_width = 120

# Position (x, y, z) vector from motion sensor to anemometer.
; IMU2anemometer_pos = 0.0, 0.0, 0.0
# Order (zero-based) of x, y, z vectors (RHS) for interpreting input motion
# sensor data. For example, if the order of the columns corresponding to
# these vectors in the input is 2, 1, 3, then this would be "1, 0, 2".
# This applies to both linear and angular acceleration columns.  Default
# assumes direct mapping of input column order to x, y, z, respectively.
; IMU_xyz_idx = 0, 1, 2
# Multiplier (x, y, z) vector for linear acceleration data so that they are
# placed in a right-handed coordinate system (RHS)
; IMU2RHS_linaccel_mult = 1.0, 1.0, 1.0
# Multiplier (x, y, z) vector for angular acceleration data so that they are
# placed in a right-handed coordinate system (RHS)
; IMU2RHS_angaccel_mult = 1.0, 1.0, 1.0

# Complementary filter period (s).
; complementary_filter_period = 10.0

# High-pass filter cutoff for accelerations (s).  This can be a scalar if
# the same cutoff is used for the three components, or a 3 element list
# to indicate cutoff period for the `x`, `y`, `z` components.
; accel_highpass_cutoff = 20.0
